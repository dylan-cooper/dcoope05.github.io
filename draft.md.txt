Overview

Throughout my workterm, I performed a large number of tasks that were not directly related to coding.

These included:

 * setting up Git source control and helping the team learn how it works
 * establishing a routine for deploying to the development server
 * 
 * gathering requirements with clients
 * writing Use Case documents
 * 

Project


The project that I was exploring during my work period was common in some ways and altogether strange in others.  

The database that we were using for this project was a legacy, non-relational database that interacted with a language based on BASIC.  This is what the old system was based on, the plan was for the data to be migrated to a SQL database in the future, but this was not the case yet.

The next layer was the Web API.  This could communicate with the database by executing transactions which were essentially subroutines on the database-level which would actually look through the tables and get what you wanted.

The application layer used .NET MVC on the server to answer page requests and JavaScript (KnockoutJS for the data layer, JQuery for AJAX and event-handling, JQuery UI for the UI stuff) on the client side.

During my 4 month work term, I worked in every area extensively except for the database layer which the team was already familiar with.

I explored the different areas of the project, figured out how things worked, documented it, and presented how it worked to my coworkers.



##Introduction

During the Summer of 2015, I worked as a Junior Developer in the Enterprise Applications Team of Computing & Communication Services at the University of Guelph.  This position was my first in a technical role and I found it very rewarding. 

I learned a lot about the software development process during my time on the time.  The software that we were working on was still in the pre-production stage, and a lot of what I was doing was essentially researching what technologies we could use moving forward and how to use both these technologies and the ones provided to us by the vendor.

##Goals

###Improve Understanding of Large-Scale Software Systems

I did gain a great understanding of how this system worked.  By reading architecture documents and fumbling around through the code, I learned all about the ins and outs of how this system worked.  I also gained a solid understanding through research of the similarities and differences that the system had to other systems that were more common.  I think that this was one of the best things about this work term; by the time that it ended, I was able to think about the large-scale infrastructure alongside the small-scale stuff that I was actually doing and this helped me produce code that was more robust and scalable.

###Learn C#, .NET framework, and other tools related to the system

Tools/technologies that I extensively used while at this position:

 * C#
 * Microsoft Visual Studio
 * Git Source Control (Git Extensions)
 * ASP.NET MVC
 * ASP.NET Web API
 * Telerik Fiddler
 * Razor View Engine
 * KnockoutJS
 * JSFiddle
 * JQuery & JQuery UI
 * Ajax
 * Vendor specific stuff
 * More...

Over the course of the 4 month stint, I became very familiar with these technologies.  If I were to work on a project using a stack similar to this, I'd feel very comfortable.  I developed a lot of front-end and back-end skills during this term that I expect will benefit me greatly in the future.

###Gain understanding of Web Development Best Practices

Before this term, I had done a little bit of HTML, JavaScript and PHP but my web development experience was very limited.  In this position, I became increasingly interested in this field.  I worked with HTML5, CSS3 and JavaScript extensively while working on the front end and became very familiar with these tools.  At work I became familiar with several JavaScript libraries including KnockoutJS and JQuery and in my free time I looked at others including Backbone and Angular.  

###Improve Documentation Skills

I documented a lot over the course of this work term.  Because the project was still in the pre-production stages, the Knowledge-Base that the team would work with extensively in the coming years still had to be created.  This meant that about half of my time was spent explaining what I did in the other half.  Over the course of the term, I got a lot better at this; I got better at knowing where to go into detail to make the documents complete and where not to go into detail to keep the focus where it should be.

###See the Software Development Cycle Firsthand

In Software Design courses, I learned about the different stages of the software development lifecycle, and using this firsthand on a day-to-day basis was really interesting for me.  In the last 2 months of my work term, I worked on a project in the system that I was exploring.  I went to meetings with the clients to gather requirements, worked with my supervisor to design the project and played the primary role in actually developing the solution.  My work term ended just as the initial development was finished and I had demoed it to other members of the team.  While I didn't get to see the project move to the later stages of the development cycle, meeting with the clients and seeing that perspective of software development was really interesting for me.